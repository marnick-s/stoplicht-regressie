"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const R=require("path"),I=require("fs"),B=require("child_process");function W(e){const u=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(e){for(const c in e)if(c!=="default"){const s=Object.getOwnPropertyDescriptor(e,c);Object.defineProperty(u,c,s.get?s:{enumerable:!0,get:()=>e[c]})}}return u.default=e,Object.freeze(u)}const M=W(B);var q=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function $(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var N,P;function F(){if(P)return N;P=1,N=s,s.sync=n;var e=I;function u(r,i){var a=i.pathExt!==void 0?i.pathExt:process.env.PATHEXT;if(!a||(a=a.split(";"),a.indexOf("")!==-1))return!0;for(var o=0;o<a.length;o++){var t=a[o].toLowerCase();if(t&&r.substr(-t.length).toLowerCase()===t)return!0}return!1}function c(r,i,a){return!r.isSymbolicLink()&&!r.isFile()?!1:u(i,a)}function s(r,i,a){e.stat(r,function(o,t){a(o,o?!1:c(t,r,i))})}function n(r,i){return c(e.statSync(r),r,i)}return N}var S,C;function H(){if(C)return S;C=1,S=u,u.sync=c;var e=I;function u(r,i,a){e.stat(r,function(o,t){a(o,o?!1:s(t,i))})}function c(r,i){return s(e.statSync(r),i)}function s(r,i){return r.isFile()&&n(r,i)}function n(r,i){var a=r.mode,o=r.uid,t=r.gid,l=i.uid!==void 0?i.uid:process.getuid&&process.getuid(),y=i.gid!==void 0?i.gid:process.getgid&&process.getgid(),p=parseInt("100",8),d=parseInt("010",8),g=parseInt("001",8),v=p|d,w=a&g||a&d&&t===y||a&p&&o===l||a&v&&l===0;return w}return S}var O,D;function _(){if(D)return O;D=1;var e;process.platform==="win32"||q.TESTING_WINDOWS?e=F():e=H(),O=u,u.sync=c;function u(s,n,r){if(typeof n=="function"&&(r=n,n={}),!r){if(typeof Promise!="function")throw new TypeError("callback not provided");return new Promise(function(i,a){u(s,n||{},function(o,t){o?a(o):i(t)})})}e(s,n||{},function(i,a){i&&(i.code==="EACCES"||n&&n.ignoreErrors)&&(i=null,a=!1),r(i,a)})}function c(s,n){try{return e.sync(s,n||{})}catch(r){if(n&&n.ignoreErrors||r.code==="EACCES")return!1;throw r}}return O}var b,G;function L(){if(G)return b;G=1;const e=process.platform==="win32"||process.env.OSTYPE==="cygwin"||process.env.OSTYPE==="msys",u=R,c=e?";":":",s=_(),n=o=>Object.assign(new Error(`not found: ${o}`),{code:"ENOENT"}),r=(o,t)=>{const l=t.colon||c,y=o.match(/\//)||e&&o.match(/\\/)?[""]:[...e?[process.cwd()]:[],...(t.path||process.env.PATH||"").split(l)],p=e?t.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"",d=e?p.split(l):[""];return e&&o.indexOf(".")!==-1&&d[0]!==""&&d.unshift(""),{pathEnv:y,pathExt:d,pathExtExe:p}},i=(o,t,l)=>{typeof t=="function"&&(l=t,t={}),t||(t={});const{pathEnv:y,pathExt:p,pathExtExe:d}=r(o,t),g=[],v=f=>new Promise((E,m)=>{if(f===y.length)return t.all&&g.length?E(g):m(n(o));const h=y[f],x=/^".*"$/.test(h)?h.slice(1,-1):h,k=u.join(x,o),T=!x&&/^\.[\\\/]/.test(o)?o.slice(0,2)+k:k;E(w(T,f,0))}),w=(f,E,m)=>new Promise((h,x)=>{if(m===p.length)return h(v(E+1));const k=p[m];s(f+k,{pathExt:d},(T,A)=>{if(!T&&A)if(t.all)g.push(f+k);else return h(f+k);return h(w(f,E,m+1))})});return l?v(0).then(f=>l(null,f),l):v(0)},a=(o,t)=>{t=t||{};const{pathEnv:l,pathExt:y,pathExtExe:p}=r(o,t),d=[];for(let g=0;g<l.length;g++){const v=l[g],w=/^".*"$/.test(v)?v.slice(1,-1):v,f=u.join(w,o),E=!w&&/^\.[\\\/]/.test(o)?o.slice(0,2)+f:f;for(let m=0;m<y.length;m++){const h=E+y[m];try{if(s.sync(h,{pathExt:p}))if(t.all)d.push(h);else return h}catch{}}}if(t.all&&d.length)return d;if(t.nothrow)return null;throw n(o)};return b=i,i.sync=a,b}var V=L();const K=$(V);async function X(e,u){const c=u==="x64"?"Win64":u==="x86"?"":null;if(c===null)return console.error("Failed to find valid VS gen, using native. Good Luck."),"native";const s=await Y(`"${e}" -G`),r=s.includes(`\r
`)?s.split(`\r
`):s.split(`
`);let i=!1,a="";for(const t of r){if(!i&&t.trim()==="Generators"){i=!0;continue}const l=t.split("=");if(!(l.length<=1)&&(l[0]=l[0].replace(/^(\* )/,"").trim(),l[0].match(/Visual\s+Studio\s+\d+\s+\d+(\s+\[arch\])?/))){console.log("Found generator: ",l[0]),a=l[0];break}}return!a.match(/.*\[arch]/)?a+=" -A":a=a.replace("[arch]",c).trim(),a}function Y(e){return new Promise(u=>{M.exec(e,(c,s,n)=>{u(s||n)})})}function U(e){return e.name===void 0&&(e.name=""),e.dev===void 0&&(e.dev=!1),e.os===void 0&&(e.os=process.platform,console.warn(`'os' was missing in the 'configurations'. Defaulting to the current operating system ${e.os}`)),e.arch===void 0&&(e.arch=process.arch,console.warn(`'arch' was missing in the 'configurations'. Defaulting to the current architecture ${e.arch}`)),e.runtime===void 0&&(e.runtime="node",console.warn("`runtime` was missing in the `configurations`. Defaulting to `node`")),e.runtimeVersion===void 0&&(e.runtimeVersion=process.versions.node,console.warn(`'runtimeVersion' was missing in the 'configurations'. Defaulting to the current runtimeVersion ${e.runtimeVersion}`)),e.toolchainFile===void 0&&(e.toolchainFile=null),e.CMakeOptions===void 0&&(e.CMakeOptions=[]),"cmakeOptions"in e&&e.cmakeOptions!==void 0&&console.warn("cmakeOptions was specified which was disabled in the 0.3.0 release. Please rename it to CMakeOptions"),e.addonSubdirectory===void 0&&(e.addonSubdirectory=""),e.additionalDefines=[],e}async function j(e){try{return await K(e)}catch{return null}}async function z(e,u){if(u.type==="nativeonly"&&(console.log(`--------------------------------------------------
      WARNING: Building only for the current runtime.
      WARNING: DO NOT SHIP THE RESULTING PACKAGE
     --------------------------------------------------`),e.configurations=[U({})]),u.type==="osonly"){console.log(`--------------------------------------------------
      WARNING: Building only for the current OS.
      WARNING: DO NOT SHIP THE RESULTING PACKAGE
     --------------------------------------------------`),e.configurations===void 0&&(console.error("No `configurations` entry was found in the package.json"),process.exit(1)),e.configurations=e.configurations.filter(n=>n.os===process.platform),e.configurations.length===0&&(console.error("No configuration left to build!"),process.exit(1));for(const n of e.configurations)n.toolchainFile=null}if(u.type==="dev-os-only"){console.log(`--------------------------------------------------
        WARNING: Building dev-os-only package
        WARNING: DO NOT SHIP THE RESULTING PACKAGE
       --------------------------------------------------`),e.configurations===void 0&&(console.error("No `configurations` entry was found in the package.json"),process.exit(1));const n=e.configurations.find(r=>r.os===process.platform&&r.dev);n===void 0&&(console.error(`No matching entry with \`dev == true\` and \`os == ${process.platform}\` in \`configurations\``),process.exit(1)),e.configurations=[n]}if(u.type==="named-configs"&&(e.configurations===void 0&&(console.error("No `configurations` entry was found in the package.json"),process.exit(1)),e.configurations=e.configurations.filter(n=>n.name!==void 0?u.configsToBuild.includes(n.name):!1),e.configurations.length===0&&(console.error("No configuration left to build!"),process.exit(1))),e.packageDirectory===void 0&&(e.packageDirectory=process.cwd()),e.projectName===void 0&&(e.projectName="addon"),e.targetDirectory===void 0&&(e.targetDirectory="build"),e.stagingDirectory===void 0&&(e.stagingDirectory="staging"),e.cmakeToUse===void 0){const n=await j("cmake");n===null&&(console.error("cmake binary not found, try to specify 'cmakeToUse'"),process.exit(1)),e.cmakeToUse=n}const[c,s]=await Promise.all([j("ninja"),j("make")]);if(e.generatorToUse===void 0)if(console.log("no generator specified in package.json, checking ninja"),c===null)if(console.log("ninja not found, checking make"),s===null)if(console.log("make not found, using native"),process.platform==="win32"){const n=await X(e.cmakeToUse,process.arch);e.generatorToUse=n,e.generatorBinary="native"}else e.generatorToUse="native",e.generatorBinary="native";else console.log("found make at",s,"(fallback)"),e.generatorToUse="Unix Makefiles",e.generatorBinary=s;else console.log("found ninja at",c),e.generatorToUse="Ninja",e.generatorBinary=c;if(e.generatorBinary===void 0&&(e.generatorToUse==="Ninja"?(c===null&&(console.error("Ninja was specified as generator but no ninja binary could be found. Specify it via 'generatorBinary'"),process.exit(1)),e.generatorBinary=c):e.generatorToUse==="Unix Makefiles"?(s===null&&(console.error("Unix Makefiles was specified as generator but no make binary could be found. Specify it via 'generatorBinary'"),process.exit(1)),e.generatorBinary=s):(console.error(`Unsupported generator ${e.generatorToUse}`),process.exit(1))),e.buildType===void 0&&(e.buildType="Release",console.warn("`buildType` was missing. Considering 'Release'")),e.configurations)for(const n of e.configurations)n.additionalDefines=[];return e}exports.defaultBuildConfiguration=U;exports.defaultBuildOptions=z;
//# sourceMappingURL=lib.js.map
